Binary Search (BS) is one of the most basic searching algorithms. It is common for interviewers to ask coding questions where the only or optimal solution requires us to use binary search. . This is especially important at on-site interviews, where interviewees are asked only two to four different problems. Unfortunately, failure to effectively use binary search bug-free can be a red flag.

Binary search is also referred to as half-interval search, which gives us a hint at when to use it. If we can, roughly, eliminate half of the search area with a single condition, then we are binary searching our target.

Handling Corner Cases!

The most common reason why candidates fail at binary search coding interview questions is that they fail to handle corner cases.

There are many reasons why binary search corner cases might form. For instance, a corner case is formed when the target is at the 0th index of an array when the target is at (n - 1)th index, when the loop goes infinite, and so on.

Luckily, these pitfalls can be avoided if we choose the same approach every time.

Now, we will take a walk through this approach.

3. Details#
Most of the people who deal with binary search problems get stuck by considering the specifics of each problem. But, most binary search questions rely on the same concepts. If we use the same solid foundation for our solution, we can easily bypass all of the specifics.

Our foundation is built on five simple points:

The left index points to 0 index.
The right index points to the size of array.
The while loop condition is left + 1 > right.
We will move the left or right index to the mid index.
We will check an element on the left index, outside of the loop.
Letâ€™s take a look at the complexity of our approach in the next lesson.